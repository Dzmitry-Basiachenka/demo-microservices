plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'de.undercouch.download'
}

jar {
    enabled = false
}

allprojects {
    group("${group}")
    version("${version}")

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
        mavenLocal()
    }
}

task downloadAgent(type: Download) {
    src "https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v${otelVersion}/opentelemetry-javaagent.jar"
    dest project.projectDir.toString() + "/opentelemetry-javaagent.jar"
    overwrite true
}

build.finalizedBy downloadAgent

subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    configurations {
        cucumberRuntime {
            extendsFrom testImplementation
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"

        implementation "io.micrometer:micrometer-registry-prometheus:${prometheusVersion}"

        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

        testImplementation "org.postgresql:postgresql"

        testImplementation platform("org.testcontainers:testcontainers-bom:${testContainersVersion}")
        testImplementation "org.testcontainers:testcontainers"
        testImplementation "org.testcontainers:junit-jupiter"
        testImplementation "org.testcontainers:postgresql"

        testImplementation platform("io.cucumber:cucumber-bom:${cucumberVersion}")
        testImplementation "io.cucumber:cucumber-java"
        testImplementation "io.cucumber:cucumber-spring"
        testImplementation "io.cucumber:cucumber-junit"
        testImplementation "io.cucumber:cucumber-junit-platform-engine"

        testImplementation platform("org.junit:junit-bom:${junitVersion}")
        testImplementation "org.junit.platform:junit-platform-suite"

        testImplementation "io.rest-assured:rest-assured"
        testImplementation "io.rest-assured:spring-mock-mvc"
    }

    task copyFileFromRootProject(type: Copy) {
        from "${rootProject.projectDir}/opentelemetry-javaagent.jar"
        into 'build/otel'
        dependsOn rootProject.downloadAgent
    }

    build.finalizedBy copyFileFromRootProject

    test() {
        useJUnitPlatform()
        environment "spring.profiles.active", "test"

        testLogging {
            events "passed", "skipped", "failed"
        }

        filter {
            excludeTestsMatching "*.CucumberTest"
            excludeTestsMatching "*.*ContractTest"
        }
    }

    test.finalizedBy jacocoTestReport

    task cucumber() {
        dependsOn assemble, testClasses
        doLast {
            javaexec {
                main = "io.cucumber.core.cli.Main"
                classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                args = ['--plugin', 'pretty', '--glue', 'com.microservices.resource.service', 'src/test/resources']
                environment += ['CUCUMBER_PUBLISH_ENABLED': 'true', 'spring.profiles.active': 'test']
            }
        }
    }

    task consumerContractTest(type: Test, group: 'verification') {
        useJUnitPlatform()
        environment "spring.profiles.active", "test"

        testLogging {
            events "passed", "skipped", "failed"
        }

        include("**/contract/**")
    }
}